// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  name           String
  email          String     @unique
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  article        Article[]
  comment        Comment[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  tags        String  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  article     Article[]
  comment    Comment[]
}

model Article {
  id         Int      @id @default(autoincrement())
  title      String   
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     Int?
  productId  Int?
  user       User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  product    Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
  comment    Comment[]
}

model Comment {
  id         Int      @id @default(autoincrement())
  content    String  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     Int?     
  articleId  Int?
  productId  Int?   
  user       User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  article    Article? @relation(fields: [articleId], references: [id], onDelete: SetNull)
  product    Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
}
